services:
  app:
    build: .
    container_name: app
    ports:
      - 8080:8080
    environment:
      - PG_DB=example
      - PG_HOST=db
      - PG_USER=postgres
      - PG_PASSWORD=
    healthcheck:
      test: /healthchecks/curl.sh
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - spring-postgres
    volumes:
      - ./healthchecks:/healthchecks
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:alpine
    restart: always
    container_name: db
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./healthchecks:/healthchecks
    environment:
      - POSTGRES_DB=example
      - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - 5432
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - spring-postgres
volumes:
  db-data:
networks:
  spring-postgres:
